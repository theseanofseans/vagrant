#!/bin/bash
#VERSION=1.02.05

# -- single line USAGE -- 
#source ~/lib/script__usage_message.conf
#export USAGE_MESSAGE="USAGE: $0 required_args [optional_args]"
# -- multi line USAGE -- 
#export USAGE_MESSAGE="USAGE: \n" 
#USAGE_MESSAGE="${USAGE_MESSAGE} line 1 \n" 
#USAGE_MESSAGE="${USAGE_MESSAGE} line 2 \n" 
#USAGE_MESSAGE="${USAGE_MESSAGE} line 3 \n" 
#USAGE_MESSAGE="${USAGE_MESSAGE}$0 required_args [optional_args]" 
# -- 
# script_usage_message
function script_usage_message() {
	if [[ ! -n "$USAGE_MESSAGE" || "$USAGE_MESSAGE" == '-h' ]] ; then
		printf "$0 USAGE:\n"
		printf " -- single line USAGE -- \n"
		printf 'source script_usage_message.conf \n'
		printf 'export USAGE_MESSAGE="USAGE: \$0 required_args [optional_args]" \n'
		printf 'script_usage_message \n'
		printf " -- multi line USAGE -- \n"
		printf 'export USAGE_MESSAGE="USAGE: " \n' 
		printf 'USAGE_MESSAGE="${USAGE_MESSAGE} line 1"  \n' 
		printf 'USAGE_MESSAGE="${USAGE_MESSAGE} line 2"  \n' 
		printf 'USAGE_MESSAGE="${USAGE_MESSAGE} line 3"  \n' 
		printf 'USAGE_MESSAGE="${USAGE_MESSAGE}$0 required_args [optional_args]" \n' 
		printf " -- \n"
		if [[ ! -n "$USAGE_MESSAGE" ]] ; then
			echo "ERROR: USAGE_MESSAGE($USAGE_MESSAGE) not set, exitting"
			return 1
		fi
		return 1
	fi
	printf "${USAGE_MESSAGE}\n"
	return 0
}


